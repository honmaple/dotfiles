alias mv='mv -i'
alias rm='rm -i'
alias ln='ln -i'
alias kssh='$HOME/Git/knownsec/ssh/kssh.sh'
alias kscp='$HOME/Git/knownsec/ssh/kscp.sh'
alias luarocks='luarocks --tree=$HOME/repo/lua'
alias flutter='flutter --no-version-check'

export PATH=/opt/homebrew/bin:$PATH

if which brew > /dev/null;then
    export HOMEBREW_NO_AUTO_UPDATE=true
    # export HOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK=true
    # export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles
    # export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.ustc.edu.cn/homebrew-bottles
    eval "$(brew shellenv)"
fi

# export GOPROXY=https://goproxy.io
# export GOPROXY=https://proxy.golang.com.cn,direct
export GOPROXY=https://goproxy.cn,direct
export GOPATH=$HOME/repo/golang
export PATH=$HOME/repo/golang/bin:$PATH

export NODE_PATH=$HOME/repo/npm/lib/node_modules
export PATH=$HOME/repo/npm/bin:$PATH

export CARGO_HOME=$HOME/repo/rust/cargo
export CARGO_TARGET_DIR=$HOME/repo/rust/cargo/build
export PATH=$CARGO_HOME/bin:$PATH

export RUSTUP_HOME=$HOME/repo/rust/rustup
export RUSTUP_DIST_SERVER=https://rsproxy.cn
export RUSTUP_UPDATE_ROOT=https://rsproxy.cn/rustup

export GEM_HOME=$HOME/repo/ruby/gem
export GEM_PATH=$HOME/repo/ruby/gem
export GEM_SPEC_CACHE=$HOME/repo/ruby/gem/specs
export PATH=$GEM_HOME/bin:$PATH

# export LUA_PATH="$HOME/repo/lua/share/lua/5.3/?.lua;$HOME/repo/lua/share/lua/5.3/?/init.lua;$LUA_PATH;"
# export LUA_CPATH="$HOME/repo/lua/lib/lua/5.3/?.so;$LUA_CPATH;"
# export PATH=$HOME/repo/lua/bin:$PATH

export PUB_CACHE=$HOME/repo/flutter/pub-cache
export PUB_HOSTED_URL=https://pub.flutter-io.cn
export FLUTTER_STORAGE_BASE_URL=https://storage.flutter-io.cn
export PATH=$HOME/repo/flutter/bin:$PUB_CACHE/bin:$PATH
# export FLUTTER_STORAGE_BASE_URL="https://mirrors.tuna.tsinghua.edu.cn/git/flutter"
# export PUB_HOSTED_URL="https://mirrors.tuna.tsinghua.edu.cn/dart-pub"
# export FLUTTER_STORAGE_BASE_URL="https://mirrors.tuna.tsinghua.edu.cn/git/flutter"

# export PUB_HOSTED_URL=https://mirror.sjtu.edu.cn/dart-pub
# export FLUTTER_STORAGE_BASE_URL=https://mirror.sjtu.edu.cn

# export ANDROID_SDK_ROOT=/usr/local/share/android-sdk
# export ANDROID_HOME=/usr/local/share/android-sdk
export ANDROID_HOME=$HOME/repo/android/sdk
export NDK_HOME="$ANDROID_HOME/ndk/29.0.13113456"
# export GRADLE_HOME=$HOME/repo/android/gradle-8.3
# export JAVA_HOME=/usr/local/opt/openjdk@11
export JAVA_HOME='/Applications/Android Studio.app/Contents/jbr/Contents/Home'
export PATH=$ANDROID_HOME/platform-tools:$PATH
# export PATH=$GRADLE_HOME/bin:$PATH

export PYTHONUSERBASE=$HOME/repo/python
export PYTHONHISTFILE=$HOME/repo/python/history
export PATH=$HOME/repo/python/bin:$PATH

# export PYENV_VIRTUALENV_DISABLE_PROMPT=0
# export PYTHONPATH=$PYTHONPATH:/usr/lib/python3.6/site-packages:$HOME/repo/python/lib/python3.6/site-packages
if which pyenv > /dev/null;then
    export PYENV_ROOT=$HOME/repo/python/pyenv
    export PATH=$PYENV_ROOT/bin:$PATH
    eval "$(pyenv init -)";
fi

if which pyenv-virtualenv-init > /dev/null; then
    eval "$(pyenv virtualenv-init -)";
fi

export CLICOLOR=1
export BASH_SILENCE_DEPRECATION_WARNING=1

function proxy_on(){
    export http_proxy=http://127.0.0.1:1086
    export https_proxy=http://127.0.0.1:1086
    export all_proxy=socks5://127.0.0.1:1086
    export HTTP_PROXY=http://127.0.0.1:1086
    export HTTPS_PROXY=http://127.0.0.1:1086
    export ALL_PROXY=socks5://127.0.0.1:1086

    # export http_proxy=http://127.0.0.1:7070
    # export https_proxy=http://127.0.0.1:7070

    # export ALL_PROXY=socks5://127.0.0.1:1086
    # export ALL_PROXY=socks5://127.0.0.1:7070

    # export http_proxy=socks5://127.0.0.1:7070
    # export https_proxy=socks5://127.0.0.1:7070
    # export all_proxy=socks5://127.0.0.1:7070
    # export no_proxy=socks5://127.0.0.1:7070
    # export HTTP_PROXY=socks5://127.0.0.1:7070
    # export HTTPS_PROXY=socks5://127.0.0.1:7070
    # export ALL_PROXY=socks5://127.0.0.1:7070
    # export NO_PROXY=socks5://127.0.0.1:7070
    echo -e "已开启代理"
}
function proxy_off(){
    unset http_proxy
    unset https_proxy
    unset all_proxy
    unset HTTP_PROXY
    unset HTTPS_PROXY
    unset ALL_PROXY

    # unset http_proxy;
    # unset https_proxy
    # unset all_proxy
    # unset no_proxy
    # unset HTTP_PROXY
    # unset HTTPS_PROXY
    # unset ALL_PROXY
    # unset NO_PROXY
    echo -e "已关闭代理"
}

git_status() {
    cmd=`git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/[(（]//' -e 's/[）)]//'  -e 's/* \(.*\)/(\1)/'`
    echo -en "\033[32m$cmd\033[0m"
}
proxy_status() {
    [[ -z "${http_proxy}" ]] || echo -en "\033[32m[PROXY]\033[0m"
}
PS1="\$(proxy_status)\[\e[0;37m\]\342\224\214\342\224\200 \[[\e[0;33m\]\u\[\e[0;37m\]]\342\224\200[\[\e[1;33m\]\w\[\e[0;37m\]]\$(git_status)\n\[\e[0;37m\]\342\224\224\342\224\200\342\224\200\342\225\274\[\e[0m\] "
